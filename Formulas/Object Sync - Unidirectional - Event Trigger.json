{"id":24290,"name":"Object Sync - Unidirectional - Event Trigger","description":"Create a VDR that has mandatory fields email and id for this sync to work. Create two Element Instances - the source should have events turned on. Map this VDR to two Element Instances. Remove the \"id\" mapping from requests (can click on the cog next to the field). Create a Formula Instance and set the Element Instances and write in the VDR name. Add an object to the source application and depending on the polling interval, it will sync over.","userId":5426,"accountId":5337,"createdDate":"2019-02-22T17:30:55Z","steps":[{"id":145430,"onSuccess":["checkExists"],"onFailure":[],"name":"callDestination","type":"elementRequest","properties":{"elementInstanceId":"${config.destination}","query":"${steps.whereClause}","method":"GET","api":"/${config.vdrname}"}},{"id":145431,"onSuccess":["updateRecord"],"onFailure":["createRecord"],"name":"checkExists","type":"filter","properties":{"body":"let arr = steps.callDestination.response.body;\n\nif(arr.length === 0){\n  done(false);\n}\ndone(true);"}},{"id":145432,"onSuccess":[],"onFailure":[],"name":"createRecord","type":"elementRequest","properties":{"elementInstanceId":"${config.destination}","body":"${steps.getRecord.response.body}","method":"POST","api":"/${config.vdrname}"}},{"id":145433,"onSuccess":["getRecord"],"onFailure":[],"name":"filterEvent","type":"filter","properties":{"body":"let pollEvent = trigger.event;\n\nif(pollEvent.objectType == 'Contact' && (pollEvent.eventType == \"CREATED\" || pollEvent.eventType == \"UPDATED\")){\n  done(true);\n  \n}\ndone(false);"}},{"id":145434,"onSuccess":["whereClause"],"onFailure":[],"name":"getRecord","type":"elementRequest","properties":{"elementInstanceId":"${config.source}","method":"GET","path":"${trigger.event}","api":"/${config.vdrname}/{objectId}"}},{"id":145435,"onSuccess":[],"onFailure":[],"name":"updateRecord","type":"elementRequest","properties":{"elementInstanceId":"${config.destination}","body":"${steps.getRecord.response.body}","method":"PATCH","path":"${steps.callDestination.response.body[0]}","api":"/${config.vdrname}/{id}"}},{"id":145436,"onSuccess":["callDestination"],"onFailure":[],"name":"whereClause","type":"script","properties":{"body":"//The VDR must have a field called \"email\" in the definition. It also must have a field called \"id\" and this should be removed from requests (by clicking on the cog next to the field name)\n\n\nlet email = steps.getRecord.response.body.email;\n\ndone({\"where\":\"email ='\"+email+\"'\"});"}}],"triggers":[{"id":21745,"onSuccess":["getRecord"],"onFailure":[],"type":"event","async":true,"name":"trigger","properties":{"elementInstanceId":"${config.source}"}}],"engine":"v3","singleThreaded":false,"debugLoggingEnabled":true,"active":true,"configuration":[{"id":41592,"key":"destination","name":"destination","type":"elementInstance","required":true},{"id":41593,"key":"source","name":"source","type":"elementInstance","required":true},{"id":41604,"key":"vdrname","name":"vdr name","type":"value","required":true}]}